# Generated by Django 4.0.4 on 2022-04-30 22:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import rest_api.models.post_models
import rest_api.models.user_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.CharField(default=rest_api.models.user_models.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.CharField(default=rest_api.models.user_models.create_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('user_id', models.CharField(default=rest_api.models.user_models.create_unique_user_id, max_length=30, unique=True)),
                ('username', models.CharField(blank=True, default='', max_length=30)),
                ('age', models.PositiveIntegerField(blank=True, default=0)),
                ('prof_image', models.ImageField(blank=True, default='', null=True, upload_to=rest_api.models.user_models.create_path_of_prof_image)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('userProfile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='related_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.CharField(default=rest_api.models.post_models.create_posts_id, editable=False, max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='', max_length=30)),
                ('content', models.TextField(default='', max_length=300)),
                ('post_image', models.ImageField(blank=True, null=True, upload_to=rest_api.models.post_models.create_path_of_posts_image)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('userPost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Contributer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentLike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentLike', to='rest_api.comment')),
                ('postLike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postLike', to='rest_api.post')),
                ('userLike', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userLike', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userFollower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
                ('userFollowing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='postComment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postComment', to='rest_api.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='userComment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userComment', to=settings.AUTH_USER_MODEL),
        ),
    ]
